START
// Declaring array vetor[3] of integer
PUSHI 0     // Initialize vetor[0] with 0
PUSHI 0     // Initialize vetor[1] with 0
PUSHI 0     // Initialize vetor[2] with 0
// Declaring variable i of type integer
PUSHI 0     // Initialize i with 0
STOREG 3  // Store in global position 3
// Declaring variable soma of type integer
PUSHI 0     // Initialize soma with 0
STOREG 4  // Store in global position 4
// Array assignment: vetor[1] := expression
PUSHI 10         // Push integer 10
STOREG 1      // Store value at vetor[1]
// Array assignment: vetor[2] := expression
PUSHI 5         // Push integer 5
STOREG 2      // Store value at vetor[2]
// Array assignment: vetor[3] := expression
PUSHI 20         // Push integer 20
STOREG 3      // Store value at vetor[3]
// WRITELN statement
PUSHS "vetor[1]: "         // Push string "vetor[1]: "
WRITES      // Write string
// Array access: vetor[1]
PUSHG 1       // Push value at vetor[1]
WRITEI      // Write integer
WRITELN     // Print newline
// WRITELN statement
PUSHS "vetor[2]: "         // Push string "vetor[2]: "
WRITES      // Write string
// Array access: vetor[2]
PUSHG 2       // Push value at vetor[2]
WRITEI      // Write integer
WRITELN     // Print newline
// WRITELN statement
PUSHS "vetor[3]: "         // Push string "vetor[3]: "
WRITES      // Write string
// Array access: vetor[3]
PUSHG 3       // Push value at vetor[3]
WRITEI      // Write integer
WRITELN     // Print newline
// Assignment to soma
// Array access: vetor[1]
PUSHG 1       // Push value at vetor[1]
// Array access: vetor[3]
PUSHG 3       // Push value at vetor[3]
ADD         // Add integers
STOREG 4  // Store value in variable soma
// WRITELN statement
PUSHS "Soma de vetor[1] e vetor[3]: "         // Push string "Soma de vetor[1] e vetor[3]: "
WRITES      // Write string
PUSHG 4      // Push variable soma
WRITEI      // Write integer
WRITELN     // Print newline
STOP
